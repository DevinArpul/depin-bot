{
  "manifest": {
    "name": "@distube/ytdl-core",
    "description": "DisTube fork of ytdl-core. YouTube video downloader in pure javascript.",
    "keywords": [
      "youtube",
      "video",
      "download",
      "distube"
    ],
    "version": "4.16.12",
    "repository": {
      "type": "git",
      "url": "git://github.com/distubejs/ytdl-core.git"
    },
    "author": {
      "name": "Skick",
      "url": "https://github.com/skick1234"
    },
    "contributors": [
      {
        "name": "fent",
        "email": "fentbox@gmail.com",
        "url": "https://github.com/fent"
      },
      {
        "name": "Tobias Kutscha",
        "url": "https://github.com/TimeForANinja"
      },
      {
        "name": "Andrew Kelley",
        "url": "https://github.com/andrewrk"
      },
      {
        "name": "Mauricio Allende",
        "url": "https://github.com/mallendeo"
      },
      {
        "name": "Rodrigo Altamirano",
        "url": "https://github.com/raltamirano"
      },
      {
        "name": "Jim Buck",
        "url": "https://github.com/JimmyBoh"
      },
      {
        "name": "Pawel Rucinski",
        "url": "https://github.com/Roki100"
      },
      {
        "name": "Alexander Paolini",
        "url": "https://github.com/Million900o"
      }
    ],
    "main": "./lib/index.js",
    "types": "./typings/index.d.ts",
    "files": [
      "lib",
      "typings"
    ],
    "dependencies": {
      "http-cookie-agent": "^7.0.1",
      "https-proxy-agent": "^7.0.6",
      "m3u8stream": "^0.8.6",
      "miniget": "^4.2.3",
      "sax": "^1.4.1",
      "tough-cookie": "^5.1.2",
      "undici": "^7.8.0"
    },
    "devDependencies": {
      "@types/node": "^22.15.2",
      "prettier": "^3.5.3",
      "typescript": "^5.8.3"
    },
    "engines": {
      "node": ">=20.18.1"
    },
    "license": "MIT",
    "funding": "https://github.com/distubejs/ytdl-core?sponsor",
    "scripts": {
      "prettier": "prettier --write \"**/*.{js,json,yml,md,ts}\""
    },
    "_registry": "npm",
    "_loc": "/data/data/com.termux/files/home/.cache/yarn/v6/npm-ytdl-core-4.16.12-a9091a77b424670abf394bfedccad2a9bd071170-integrity/node_modules/ytdl-core/package.json",
    "readmeFilename": "README.md",
    "readme": "# @distube/ytdl-core\n\n> [!IMPORTANT]\n> [@distube/youtube](https://github.com/distubejs/extractor-plugins) depends on [youtubei.js](https://github.com/LuanRT/YouTube.js) from now on.\\\n> This fork will be no longer maintained. Please use alternatives (e.g. [youtubei.js](https://github.com/LuanRT/YouTube.js)) instead.\n\nDisTube fork of `ytdl-core`. This fork is dedicated to fixing bugs and adding features that are not merged into the original repo as soon as possible.\n\n<a href='https://ko-fi.com/skick' target='_blank'><img height='48' src='https://storage.ko-fi.com/cdn/kofi3.png' alt='Buy Me a Coffee at ko-fi.com' /></a>\n\n## Installation\n\n```bash\nnpm install @distube/ytdl-core@latest\n```\n\nMake sure you're installing the latest version of `@distube/ytdl-core` to keep up with the latest fixes.\n\n## Usage\n\n```js\nconst ytdl = require(\"@distube/ytdl-core\");\n// TypeScript: import ytdl from '@distube/ytdl-core'; with --esModuleInterop\n// TypeScript: import * as ytdl from '@distube/ytdl-core'; with --allowSyntheticDefaultImports\n// TypeScript: import ytdl = require('@distube/ytdl-core'); with neither of the above\n\n// Download a video\nytdl(\"http://www.youtube.com/watch?v=aqz-KE-bpKQ\").pipe(require(\"fs\").createWriteStream(\"video.mp4\"));\n\n// Get video info\nytdl.getBasicInfo(\"http://www.youtube.com/watch?v=aqz-KE-bpKQ\").then(info => {\n  console.log(info.videoDetails.title);\n});\n\n// Get video info with download formats\nytdl.getInfo(\"http://www.youtube.com/watch?v=aqz-KE-bpKQ\").then(info => {\n  console.log(info.formats);\n});\n```\n\n### Cookies Support\n\n```js\nconst ytdl = require(\"@distube/ytdl-core\");\n\n// (Optional) Below are examples, NOT the recommended options\nconst cookies = [\n  { name: \"cookie1\", value: \"COOKIE1_HERE\" },\n  { name: \"cookie2\", value: \"COOKIE2_HERE\" },\n];\n\n// (Optional) http-cookie-agent / undici agent options\n// Below are examples, NOT the recommended options\nconst agentOptions = {\n  pipelining: 5,\n  maxRedirections: 0,\n  localAddress: \"127.0.0.1\",\n};\n\n// agent should be created once if you don't want to change your cookie\nconst agent = ytdl.createAgent(cookies, agentOptions);\n\nytdl.getBasicInfo(\"http://www.youtube.com/watch?v=aqz-KE-bpKQ\", { agent });\nytdl.getInfo(\"http://www.youtube.com/watch?v=aqz-KE-bpKQ\", { agent });\n```\n\n#### How to get cookies\n\n- Install [EditThisCookie](http://www.editthiscookie.com/) extension for your browser.\n- Go to [YouTube](https://www.youtube.com/).\n- Log in to your account. (You should use a new account for this purpose)\n- Click on the extension icon and click \"Export\" icon.\n- Your cookies will be added to your clipboard and paste it into your code.\n\n> [!WARNING]\n> Don't logout it by clicking logout button on youtube/google account manager, it will expire your cookies.\n> You can delete your browser's cookies to log it out on your browser.\n> Or use incognito mode to get your cookies then close it.\n\n> [!WARNING]\n> Paste all the cookies array from clipboard into `createAgent` function. Don't remove/edit any cookies if you don't know what you're doing.\n\n> [!WARNING]\n> Make sure your account, which logged in when you getting your cookies, use 1 IP at the same time only. It will make your cookies alive longer.\n\n```js\nconst ytdl = require(\"@distube/ytdl-core\");\nconst agent = ytdl.createAgent([\n  {\n    domain: \".youtube.com\",\n    expirationDate: 1234567890,\n    hostOnly: false,\n    httpOnly: true,\n    name: \"---xxx---\",\n    path: \"/\",\n    sameSite: \"no_restriction\",\n    secure: true,\n    session: false,\n    value: \"---xxx---\",\n  },\n  {\n    \"...\": \"...\",\n  },\n]);\n```\n\n- Or you can paste your cookies array into a file and use `fs.readFileSync` to read it.\n\n```js\nconst ytdl = require(\"@distube/ytdl-core\");\nconst fs = require(\"fs\");\nconst agent = ytdl.createAgent(JSON.parse(fs.readFileSync(\"cookies.json\")));\n```\n\n### Proxy Support\n\n```js\nconst ytdl = require(\"@distube/ytdl-core\");\n\nconst agent = ytdl.createProxyAgent({ uri: \"my.proxy.server\" });\n\nytdl.getBasicInfo(\"http://www.youtube.com/watch?v=aqz-KE-bpKQ\", { agent });\nytdl.getInfo(\"http://www.youtube.com/watch?v=aqz-KE-bpKQ\", { agent });\n```\n\nUse both proxy and cookies:\n\n```js\nconst ytdl = require(\"@distube/ytdl-core\");\n\nconst agent = ytdl.createProxyAgent({ uri: \"my.proxy.server\" }, [{ name: \"cookie\", value: \"COOKIE_HERE\" }]);\n\nytdl.getBasicInfo(\"http://www.youtube.com/watch?v=aqz-KE-bpKQ\", { agent });\nytdl.getInfo(\"http://www.youtube.com/watch?v=aqz-KE-bpKQ\", { agent });\n```\n\n### IP Rotation\n\n_Built-in ip rotation (`getRandomIPv6`) won't be updated and will be removed in the future, create your own ip rotation instead._\n\nTo implement IP rotation, you need to assign the desired IP address to the `localAddress` property within `undici.Agent.Options`.\nTherefore, you'll need to use a different `ytdl.Agent` for each IP address you want to use.\n\n```js\nconst ytdl = require(\"@distube/ytdl-core\");\nconst { getRandomIPv6 } = require(\"@distube/ytdl-core/lib/utils\");\n\nconst agentForARandomIP = ytdl.createAgent(undefined, {\n  localAddress: getRandomIPv6(\"2001:2::/48\"),\n});\n\nytdl.getBasicInfo(\"http://www.youtube.com/watch?v=aqz-KE-bpKQ\", { agent: agentForARandomIP });\n\nconst agentForAnotherRandomIP = ytdl.createAgent(undefined, {\n  localAddress: getRandomIPv6(\"2001:2::/48\"),\n});\n\nytdl.getInfo(\"http://www.youtube.com/watch?v=aqz-KE-bpKQ\", { agent: agentForAnotherRandomIP });\n```\n\n## API\n\nYou can find the API documentation in the [original repo](https://github.com/fent/node-ytdl-core#api). Except a few changes:\n\n### `ytdl.getInfoOptions`\n\n- `requestOptions` is now `undici`'s [`RequestOptions`](https://github.com/nodejs/undici#undicirequesturl-options-promise).\n- `agent`: [`ytdl.Agent`](https://github.com/distubejs/ytdl-core/blob/master/typings/index.d.ts#L10-L14)\n- `playerClients`: An array of player clients to use. Accepts `WEB`, `WEB_EMBEDDED`, `TV`, `IOS`, and `ANDROID`. Defaults to `[\"WEB_EMBEDDED\", \"IOS\", \"ANDROID\",\"TV\"]`.\n- `fetch`: Custom fetch implementation. Defaults to `undici`'s request.\n\n### `ytdl.createAgent([cookies]): ytdl.Agent`\n\n`cookies`: an array of json cookies exported with [EditThisCookie](http://www.editthiscookie.com/).\n\n### `ytdl.createProxyAgent(proxy[, cookies]): ytdl.Agent`\n\n`proxy`: [`ProxyAgentOptions`](https://github.com/nodejs/undici/blob/main/docs/api/ProxyAgent.md#parameter-proxyagentoptions) contains your proxy server information.\n\n#### How to implement `ytdl.Agent` with your own Dispatcher\n\nYou can find the example [here](https://github.com/distubejs/ytdl-core/blob/master/lib/cookie.js#L73-L86)\n\n## Limitations\n\nytdl cannot download videos that fall into the following\n\n- Regionally restricted (requires a [proxy](#proxy-support))\n- Private (if you have access, requires [cookies](#cookies-support))\n- Rentals (if you have access, requires [cookies](#cookies-support))\n- YouTube Premium content (if you have access, requires [cookies](#cookies-support))\n- Only [HLS Livestreams](https://en.wikipedia.org/wiki/HTTP_Live_Streaming) are currently supported. Other formats will get filtered out in ytdl.chooseFormats\n\nGenerated download links are valid for 6 hours, and may only be downloadable from the same IP address.\n\n## Rate Limiting\n\nWhen doing too many requests YouTube might block. This will result in your requests getting denied with HTTP-StatusCode 429. The following steps might help you:\n\n- Update `@distube/ytdl-core` to the latest version\n- Use proxies (you can find an example [here](#proxy-support))\n- Extend the Proxy Idea by rotating (IPv6-)Addresses\n  - read [this](https://github.com/fent/node-ytdl-core#how-does-using-an-ipv6-block-help) for more information about this\n- Use cookies (you can find an example [here](#cookies-support))\n  - for this to take effect you have to FIRST wait for the current rate limit to expire\n- Wait it out (it usually goes away within a few days)\n\n## Update Checks\n\nThe issue of using an outdated version of ytdl-core became so prevalent, that ytdl-core now checks for updates at run time, and every 12 hours. If it finds an update, it will print a warning to the console advising you to update. Due to the nature of this library, it is important to always use the latest version as YouTube continues to update.\n\nIf you'd like to disable this update check, you can do so by providing the `YTDL_NO_UPDATE` env variable.\n\n```\nenv YTDL_NO_UPDATE=1 node myapp.js\n```\n\n## Related Projects\n\n- [DisTube](https://github.com/skick1234/DisTube) - A Discord.js module to simplify your music commands and play songs with audio filters on Discord without any API key.\n- [@distube/ytsr](https://github.com/distubejs/ytsr) - DisTube fork of [ytsr](https://github.com/TimeForANinja/node-ytsr).\n- [@distube/ytpl](https://github.com/distubejs/ytpl) - DisTube fork of [ytpl](https://github.com/TimeForANinja/node-ytpl).\n",
    "licenseText": "MIT License\n\nCopyright (C) 2012-present by fent\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. \n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/@distube/ytdl-core/-/ytdl-core-4.16.12.tgz#a9091a77b424670abf394bfedccad2a9bd071170",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/@distube/ytdl-core/-/ytdl-core-4.16.12.tgz",
    "hash": "a9091a77b424670abf394bfedccad2a9bd071170",
    "integrity": "sha512-/NR8Jur1Q4E2oD+DJta7uwWu7SkqdEkhwERt7f4iune70zg7ZlLLTOHs1+jgg3uD2jQjpdk7RGC16FqstG4RsA==",
    "registry": "npm",
    "packageName": "@distube/ytdl-core",
    "cacheIntegrity": "sha512-/NR8Jur1Q4E2oD+DJta7uwWu7SkqdEkhwERt7f4iune70zg7ZlLLTOHs1+jgg3uD2jQjpdk7RGC16FqstG4RsA== sha1-qQkad7QkZwq/OUv+3MrSqb0HEXA="
  },
  "registry": "npm",
  "hash": "a9091a77b424670abf394bfedccad2a9bd071170"
}