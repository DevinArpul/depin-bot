{
  "manifest": {
    "author": {
      "name": "Jeremy Stashewsky",
      "email": "jstash@gmail.com"
    },
    "contributors": [
      {
        "name": "Ivan Nikulin"
      },
      {
        "name": "Shivan Kaul Sahib"
      },
      {
        "name": "Clint Ruoho"
      },
      {
        "name": "Ian Livingstone"
      },
      {
        "name": "Andrew Waterman"
      },
      {
        "name": "Michael de Libero"
      },
      {
        "name": "Jonathan Stewmon"
      },
      {
        "name": "Miguel Roncancio"
      },
      {
        "name": "Sebastian Mayr"
      },
      {
        "name": "Alexander Savin"
      },
      {
        "name": "Lalit Kapoor"
      },
      {
        "name": "Sam Thompson"
      },
      {
        "name": "Colin Casey"
      },
      {
        "name": "Will Harney"
      }
    ],
    "license": "BSD-3-Clause",
    "name": "tough-cookie",
    "description": "RFC6265 Cookies and Cookie Jar for node.js",
    "keywords": [
      "HTTP",
      "cookie",
      "cookies",
      "set-cookie",
      "cookiejar",
      "jar",
      "RFC6265",
      "RFC2965"
    ],
    "version": "5.1.2",
    "homepage": "https://github.com/salesforce/tough-cookie",
    "repository": {
      "type": "git",
      "url": "git://github.com/salesforce/tough-cookie.git"
    },
    "bugs": {
      "url": "https://github.com/salesforce/tough-cookie/issues"
    },
    "main": "./dist/cookie/index.js",
    "types": "./dist/cookie/index.d.ts",
    "files": [
      "dist/**/*.js",
      "dist/**/*.d.ts",
      "!__tests__"
    ],
    "scripts": {
      "build": "npm run _build:clean && npm run _build:compile",
      "lint": "npm run _lint:check",
      "prepack": "npm run build",
      "prepare-pr": "npm test && npm run _api:update && npm run _docs:generate && npm run _format:fix && npm run _lint:fix",
      "test": "npm run build && npm run _test:ts && npm run _test:legacy",
      "version": "npm run _version:generate && npm run prepare-pr && git add --renormalize .",
      "_api:check": "api-extractor run --verbose",
      "_api:update": "api-extractor run --verbose --local",
      "_build:clean": "rm -rf dist",
      "_build:compile": "tsc",
      "_docs:generate": "api-documenter markdown --input-folder ./tmp --output-folder ./api/docs",
      "_docs:fix": "prettier ./api/docs --write",
      "_format:check": "prettier . --check",
      "_format:fix": "prettier . --write",
      "_lint:check": "eslint .",
      "_lint:fix": "eslint . --fix",
      "_test:legacy": "./test/scripts/vows.js test/*_test.js",
      "_test:ts": "jest",
      "_version:generate": "genversion --template version-template.ejs --force lib/version.ts"
    },
    "//": "We only support node 18+, but v16 still works. We won't block v16 until it becomes a burden.",
    "engines": {
      "node": ">=16"
    },
    "devDependencies": {
      "@eslint/js": "^9.7.0",
      "@microsoft/api-documenter": "^7.25.7",
      "@microsoft/api-extractor": "^7.47.2",
      "@types/jest": "^29.5.12",
      "@types/node": "^16.18.101",
      "async": "3.2.6",
      "eslint": "^9.9.1",
      "eslint-config-prettier": "^10.0.1",
      "eslint-import-resolver-typescript": "^3.7.0",
      "eslint-plugin-import": "^2.31.0",
      "eslint-plugin-prettier": "^5.2.1",
      "genversion": "^3.2.0",
      "globals": "^15.8.0",
      "jest": "^29.7.0",
      "prettier": "^3.3.3",
      "ts-jest": "^29.2.2",
      "ts-node": "^10.9.2",
      "typescript": "5.5.3",
      "typescript-eslint": "^8.0.1",
      "vows": "^0.8.3"
    },
    "dependencies": {
      "tldts": "^6.1.32"
    },
    "_registry": "npm",
    "_loc": "/data/data/com.termux/files/home/.cache/yarn/v6/npm-tough-cookie-5.1.2-66d774b4a1d9e12dc75089725af3ac75ec31bed7-integrity/node_modules/tough-cookie/package.json",
    "readmeFilename": "README.md",
    "readme": "# Tough Cookie &middot; [![RFC6265][rfc6265-badge]][rfc6265-tracker] [![RFC6265bis][rfc6265bis-badge]][rfc6265bis-tracker] [![npm version][npm-badge]][npm-repo] [![CI on Github Actions: salesforce/tough-cookie][ci-badge]][ci-url] ![PRs Welcome][prs-welcome-badge]\n\nA Node.js implementation of [RFC6265][rfc6265-tracker] for cookie parsing, storage, and retrieval.\n\n## Getting Started\n\nInstall Tough Cookie using [`npm`][npm-repo]:\n\n```shell\nnpm install tough-cookie\n```\n\nor [`yarn`][yarn-repo]:\n\n```shell\nyarn add tough-cookie\n```\n\n## Usage\n\n```typescript\nimport { Cookie, CookieJar } from 'tough-cookie'\n\n// parse a `Cookie` request header\nconst reqCookies = 'ID=298zf09hf012fh2; csrf=u32t4o3tb3gg43; _gat=1'\n  .split(';')\n  .map(Cookie.parse)\n// generate a `Cookie` request header\nconst cookieHeader = reqCookies.map((cookie) => cookie.cookieString()).join(';')\n\n// parse a Set-Cookie response header\nconst resCookie = Cookie.parse(\n  'foo=bar; Domain=example.com; Path=/; Expires=Tue, 21 Oct 2025 00:00:00 GMT',\n)\n// generate a Set-Cookie response header\nconst setCookieHeader = cookie.toString()\n\n// store and retrieve cookies\nconst cookieJar = new CookieJar() // uses the in-memory store by default\nawait cookieJar.setCookie(resCookie, 'https://example.com/')\nconst matchingCookies = await cookieJar.getCookies('https://example.com/')\n```\n\n> [!IMPORTANT]\n> For more detailed usage information, refer to the [API docs](./api/docs/tough-cookie.md).\n\n## RFC6265bis\n\nSupport for [RFC6265bis][rfc6265bis-tracker] is being developed. As these revisions to [RFC6252][rfc6265-tracker] are\nstill in `Active Internet-Draft` state, the areas of support that follow are subject to change.\n\n### SameSite Cookies\n\nThis change makes it possible for servers, and supporting clients, to mitigate certain types of CSRF\nattacks by disallowing `SameSite` cookies from being sent cross-origin.\n\n#### Example\n\n```typescript\nimport { CookieJar } from 'tough-cookie'\n\nconst cookieJar = new CookieJar() // uses the in-memory store by default\n\n// storing cookies with various SameSite attributes\nawait cookieJar.setCookie(\n  'strict=authorized; SameSite=strict',\n  'http://example.com/index.html',\n)\nawait cookieJar.setCookie(\n  'lax=okay; SameSite=lax',\n  'http://example.com/index.html',\n)\nawait cookieJar.setCookie('normal=whatever', 'http://example.com/index.html')\n\n// retrieving cookies using a SameSite context\nconst laxCookies = await cookieJar.getCookies('http://example.com/index.html', {\n  // the first cookie (strict=authorized) will not be returned if the context is 'lax'\n  // but the other two cookies will be returned\n  sameSiteContext: 'lax',\n})\n```\n\n> [!NOTE]\n> It is highly recommended that you read [RFC6265bis - Section 8.8][samesite-implementation] for more details on SameSite cookies, security considerations, and defense in depth.\n\n### Cookie Prefixes\n\nCookie prefixes are a way to indicate that a given cookie was set with a set of attributes simply by\ninspecting the first few characters of the cookie's name.\n\nTwo prefixes are defined:\n\n- `\"__Secure-\"`\n\n  If a cookie's name begins with a case-sensitive match for the string `__Secure-`, then the cookie was set with a \"Secure\" attribute.\n\n- `\"__Host-\"`\n\n  If a cookie's name begins with a case-sensitive match for the string `__Host-`, then the cookie was set with a \"Secure\" attribute, a \"Path\" attribute with a value of \"/\", and no \"Domain\" attribute.\n\nIf `prefixSecurity` is enabled for `CookieJar`, then cookies that match the prefixes defined above but do\nnot obey the attribute restrictions are not added.\n\nYou can define this functionality by passing in the `prefixSecurity` option to `CookieJar`. It can be one of 3 values:\n\n1. `silent`: (**default**) Enable cookie prefix checking but silently fail to add the cookie if conditions are not met.\n2. `strict`: Enable cookie prefix checking and error out if conditions are not met.\n3. `unsafe-disabled`: Disable cookie prefix checking.\n\n> If `ignoreError` is passed in as `true` when setting a cookie then the error is silent regardless of the `prefixSecurity` option (assuming it's enabled).\n\n#### Example\n\n```typescript\nimport { CookieJar, MemoryCookieStore } from 'tough-cookie'\n\nconst cookieJar = new CookieJar(new MemoryCookieStore(), {\n  prefixSecurity: 'silent',\n})\n\n// this cookie will be silently ignored since the url is insecure (http)\nawait cookieJar.setCookie(\n  '__Secure-SID=12345; Domain=example.com; Secure;',\n  'http://example.com',\n)\n\n// this cookie will be stored since the url is secure (https)\nawait cookieJar.setCookie(\n  '__Secure-SID=12345; Domain=example.com; Secure;',\n  'https://example.com',\n)\n```\n\n> [!NOTE]\n> It is highly recommended that you read [RFC6265bis - Section 4.1.3][cookie-prefixes-implementation] for more details on Cookie Prefixes.\n\n## Node.js Version Support\n\nWe follow the [Node.js release schedule](https://github.com/nodejs/Release#release-schedule) and support\nall versions that are in Active LTS or Maintenance. We will always do a major release when dropping support\nfor older versions of node, and we will do so in consultation with our community.\n\n[npm-badge]: https://img.shields.io/npm/v/tough-cookie.svg?style=flat\n[npm-repo]: https://www.npmjs.com/package/tough-cookie\n[ci-badge]: https://github.com/salesforce/tough-cookie/actions/workflows/ci.yaml/badge.svg\n[ci-url]: https://github.com/salesforce/tough-cookie/actions/workflows/ci.yaml\n[rfc6265-badge]: https://img.shields.io/badge/RFC-6265-flat?labelColor=000000&color=666666\n[rfc6265-tracker]: https://datatracker.ietf.org/doc/rfc6265/\n[rfc6265bis-badge]: https://img.shields.io/badge/RFC-6265bis-flat?labelColor=000000&color=666666\n[rfc6265bis-tracker]: https://datatracker.ietf.org/doc/draft-ietf-httpbis-rfc6265bis/\n[samesite-implementation]: https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-rfc6265bis-02#section-8.8\n[cookie-prefixes-implementation]: https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-rfc6265bis-02#section-4.1.3\n[prs-welcome-badge]: https://img.shields.io/badge/PRs-welcome-brightgreen.svg\n[yarn-repo]: https://yarnpkg.com/package?name=tough-cookie\n",
    "licenseText": "Copyright (c) 2015, Salesforce.com, Inc.\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n\n3. Neither the name of Salesforce.com nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/tough-cookie/-/tough-cookie-5.1.2.tgz#66d774b4a1d9e12dc75089725af3ac75ec31bed7",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/tough-cookie/-/tough-cookie-5.1.2.tgz",
    "hash": "66d774b4a1d9e12dc75089725af3ac75ec31bed7",
    "integrity": "sha512-FVDYdxtnj0G6Qm/DhNPSb8Ju59ULcup3tuJxkFb5K8Bv2pUXILbf0xZWU8PX8Ov19OXljbUyveOFwRMwkXzO+A==",
    "registry": "npm",
    "packageName": "tough-cookie",
    "cacheIntegrity": "sha512-FVDYdxtnj0G6Qm/DhNPSb8Ju59ULcup3tuJxkFb5K8Bv2pUXILbf0xZWU8PX8Ov19OXljbUyveOFwRMwkXzO+A== sha1-Ztd0tKHZ4S3HUIlyWvOsdewxvtc="
  },
  "registry": "npm",
  "hash": "66d774b4a1d9e12dc75089725af3ac75ec31bed7"
}