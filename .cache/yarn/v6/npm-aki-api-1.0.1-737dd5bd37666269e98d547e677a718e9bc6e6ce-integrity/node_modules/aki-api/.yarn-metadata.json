{
  "manifest": {
    "name": "@aqul/akinator-api",
    "author": {
      "name": "aqulzz"
    },
    "description": "An Simple API for Akinator",
    "version": "1.0.1",
    "main": "dist/index.js",
    "types": "dist/index.d.ts",
    "license": "MIT",
    "scripts": {
      "build": "tsc --build"
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/zennn08/akinator-api.git"
    },
    "bugs": {
      "url": "https://github.com/zennn08/akinator-api/issues"
    },
    "homepage": "https://github.com/zennn08/akinator-api#readme",
    "keywords": [
      "akinator",
      "aki",
      "aki api",
      "akinator api"
    ],
    "dependencies": {
      "axios": "^1.6.8",
      "cheerio": "^1.0.0-rc.12"
    },
    "devDependencies": {
      "@types/cheerio": "^0.22.35",
      "@typescript-eslint/parser": "^7.7.0",
      "ts-node": "^10.9.2",
      "typescript": "^5.4.5"
    },
    "_registry": "npm",
    "_loc": "/data/data/com.termux/files/home/.cache/yarn/v6/npm-aki-api-1.0.1-737dd5bd37666269e98d547e677a718e9bc6e6ce-integrity/node_modules/aki-api/package.json",
    "readmeFilename": "README.md",
    "readme": "# Akinator API\n\n## Install\n\n```bash\nnpm install @aqul/akinator-api\n```\n\n## Usage\n\n### Simple Usage\n```js\nconst { Akinator, AkinatorAnswer } = require(\"@aqul/akinator-api\")\n\nconst run = async () => {\n  const region = \"en\"\n  const api = new Akinator({ region, childMode: false })\n  await api.start()\n  console.log(`Question: ${api.question}, progress: ${api.progress}`)\n\n    // To answer\n  await api.answer(AkinatorAnswer.Yes) // or you can use 0-4\n  console.log(`Question: ${api.question}, progress: ${api.progress}`)\n\n  // To check is win or not\n  while (!api.isWin) {\n    await api.answer(Math.floor(Math.random() * 5)) // random 0-5\n    console.log(`Question: ${api.question}, progress: ${api.progress}`)\n\n    // To back last question\n    if (Math.floor(Math.random() * 10) + 1 < 4) {\n      await api.cancelAnswer()\n      console.log(`Question: ${api.question}, progress: ${api.progress}`)\n    }\n  }\n\n  // if is win\n  if (api.isWin) {\n    console.log(api.sugestion_name)\n    console.log(api.sugestion_desc)\n    console.log(api.sugestion_photo)\n  }\n}\n\nrun()\n```\n\n### To check region\n```js\nconst { regions } = require(\"@aqul/akinator-api\")\nconsole.log(regions)\n```\n\n### Use proxy\n```js\nconst { Akinator } = require(\"@aqul/akinator-api\")\nconst tunnel = require(\"tunnel\")\n\nconst httpsAgent = tunnel.httpsOverHttp({\n  proxy: {\n    host: \"xxx.xxx.xxx\",\n    port: 8080,\n    proxyAuth: \"username:password\"\n  }\n})\n\nconst region = \"en\"\nconst api = new Akinator({ region, childMode: false, config: {\n  httpsAgent\n}})\n```"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/@aqul/akinator-api/-/akinator-api-1.0.1.tgz#737dd5bd37666269e98d547e677a718e9bc6e6ce",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/@aqul/akinator-api/-/akinator-api-1.0.1.tgz",
    "hash": "737dd5bd37666269e98d547e677a718e9bc6e6ce",
    "integrity": "sha512-y1cc9GMGaQ1CAYZ8U+MHhhkPB1sWR7//5MoYzHGZ1VnXp2FEoaQoQgCUEcnCMQmctq2v4w2mroX9fTqCYOi+EA==",
    "registry": "npm",
    "packageName": "@aqul/akinator-api",
    "cacheIntegrity": "sha512-y1cc9GMGaQ1CAYZ8U+MHhhkPB1sWR7//5MoYzHGZ1VnXp2FEoaQoQgCUEcnCMQmctq2v4w2mroX9fTqCYOi+EA== sha1-c33VvTdmYmnpjVR+Z3pxjpvG5s4="
  },
  "registry": "npm",
  "hash": "737dd5bd37666269e98d547e677a718e9bc6e6ce"
}