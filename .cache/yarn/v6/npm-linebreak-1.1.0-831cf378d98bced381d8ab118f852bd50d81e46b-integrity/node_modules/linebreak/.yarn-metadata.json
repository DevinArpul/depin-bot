{
  "manifest": {
    "name": "linebreak",
    "version": "1.1.0",
    "description": "An implementation of the Unicode Line Breaking Algorithm (UAX #14)",
    "source": "src/linebreaker.js",
    "type": "module",
    "main": "dist/main.cjs",
    "module": "dist/module.mjs",
    "exports": {
      "require": "./dist/main.cjs",
      "import": "./dist/module.mjs"
    },
    "files": [
      "dist"
    ],
    "repository": {
      "type": "git",
      "url": "https://github.com/devongovett/linebreaker.git"
    },
    "keywords": [
      "unicode",
      "text",
      "wrapping"
    ],
    "author": {
      "name": "Devon Govett",
      "email": "devongovett@gmail.com"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/devongovett/linebreaker/issues"
    },
    "homepage": "https://github.com/devongovett/linebreaker",
    "dependencies": {
      "base64-js": "0.0.8",
      "unicode-trie": "^2.0.0"
    },
    "devDependencies": {
      "mocha": "^10.0.0",
      "parcel": "^2.5.0",
      "request": "^2.88.0"
    },
    "scripts": {
      "test": "parcel build && mocha --reporter landing",
      "build": "parcel build",
      "prepublishOnly": "parcel build"
    },
    "targets": {
      "main": {
        "includeNodeModules": [
          "fs"
        ]
      },
      "module": {
        "includeNodeModules": [
          "fs"
        ]
      }
    },
    "_registry": "npm",
    "_loc": "/data/data/com.termux/files/home/.cache/yarn/v6/npm-linebreak-1.1.0-831cf378d98bced381d8ab118f852bd50d81e46b-integrity/node_modules/linebreak/package.json",
    "readmeFilename": "readme.md",
    "readme": "# linebreak\nAn implementation of the Unicode Line Breaking Algorithm (UAX #14)\n\n> Line breaking, also known as word wrapping, is the process of breaking a section of text into lines such that it will fit in the\n> available width of a page, window or other display area. The Unicode Line Breaking Algorithm performs part of this process.\n> Given an input text, it produces a set of positions called \"break opportunities\" that are appropriate points to begin a new line.\n> The selection of actual line break positions from the set of break opportunities is not covered by the Unicode Line Breaking Algorithm,\n> but is in the domain of higher level software with knowledge of the available width and the display size of the text.\n\nThis is a JavaScript implementation of the [Unicode Line Breaking Algorithm](http://www.unicode.org/reports/tr14/#SampleCode) for Node.js\n(and browsers I guess). Currently supports Unicode version 13. It is used by [PDFKit](http://github.com/devongovett/pdfkit/) for\nline wrapping text in PDF documents, but since the algorithm knows nothing about the actual visual appearance or layout of text, \nit could be used for other things as well.\n\n## Installation\n\nYou can install via npm\n\n    npm install linebreak\n\n## Example\n\n```javascript\nvar LineBreaker = require('linebreak');\n\nvar lorem = 'lorem ipsum...';\nvar breaker = new LineBreaker(lorem);\nvar last = 0;\nvar bk;\n\nwhile (bk = breaker.nextBreak()) {\n  // get the string between the last break and this one\n  var word = lorem.slice(last, bk.position);\n  console.log(word);\n\n  // you can also check bk.required to see if this was a required break...\n  if (bk.required) {\n    console.log('\\n\\n');\n  }\n\n  last = bk.position;\n}\n```\n\n## Development Notes\n\nIn order to use the library, you shouldn't need to know this, but if you're interested in\ncontributing or fixing bugs, these things might be of interest.\n\n* The `src/classes.js` file is automatically generated from `LineBreak.txt` in the Unicode\n  database by `src/generate_data.js`. It should be rare that you need to run this, but\n  you may if, for instance, you want to change the Unicode version.\n\n* You can run the tests using `npm test`. They are written using `mocha`, and generated from\n  `LineBreakTest.txt` from the Unicode database, which is included in the repository for performance\n  reasons while running them. About 50 of the over 7600 tests are currently skipped due to\n  implementation differences. It appears that some of the tests may be wrong or use different\n  tailoring from the spec.\n\n## License\n\nMIT\n",
    "licenseText": "MIT License\n\nCopyright (c) 2014-present Devon Govett\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/linebreak/-/linebreak-1.1.0.tgz#831cf378d98bced381d8ab118f852bd50d81e46b",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/linebreak/-/linebreak-1.1.0.tgz",
    "hash": "831cf378d98bced381d8ab118f852bd50d81e46b",
    "integrity": "sha512-MHp03UImeVhB7XZtjd0E4n6+3xr5Dq/9xI/5FptGk5FrbDR3zagPa2DS6U8ks/3HjbKWG9Q1M2ufOzxV2qLYSQ==",
    "registry": "npm",
    "packageName": "linebreak",
    "cacheIntegrity": "sha512-MHp03UImeVhB7XZtjd0E4n6+3xr5Dq/9xI/5FptGk5FrbDR3zagPa2DS6U8ks/3HjbKWG9Q1M2ufOzxV2qLYSQ== sha1-gxzzeNmLztOB2KsRj4Ur1Q2B5Gs="
  },
  "registry": "npm",
  "hash": "831cf378d98bced381d8ab118f852bd50d81e46b"
}