{
  "manifest": {
    "name": "filesize",
    "description": "JavaScript library to generate a human readable String describing the file size",
    "version": "10.1.6",
    "homepage": "https://filesizejs.com/",
    "author": {
      "name": "Jason Mulligan",
      "email": "jason.mulligan@avoidwork.com"
    },
    "repository": {
      "type": "git",
      "url": "git://github.com/avoidwork/filesize.js.git"
    },
    "bugs": {
      "url": "https://github.com/avoidwork/filesize.js/issues"
    },
    "files": [
      "dist/filesize.cjs",
      "dist/filesize.esm.js",
      "types/filesize.d.ts"
    ],
    "license": "BSD-3-Clause",
    "main": "dist/filesize.cjs",
    "module": "dist/filesize.esm.js",
    "types": "types/filesize.d.ts",
    "type": "module",
    "sourceType": "module",
    "engines": {
      "node": ">= 10.4.0"
    },
    "scripts": {
      "build": "npm run rollup",
      "changelog": "auto-changelog -p",
      "coverage": "nyc npm run test",
      "lint": "eslint *.js src/*.js test/*.js",
      "fix": "eslint --fix *.js src/*.js test/*.js",
      "mocha": "nyc mocha test/*.js",
      "rollup": "rollup --config",
      "test": "npm run lint && npm run mocha",
      "test-webpack": "mkdir -p test/webpack && rm -rf test/webpack/* && git clone git@github.com:rabelais88/typescript-webpack.git test/webpack && echo \"import { filesize } from 'filesize';console.log(filesize(1234));\" >> test/webpack/src/index.ts && cd test/webpack && npm install && mkdir -p node_modules/filesize/dist && cp ../../package.json node_modules/filesize/ && cp ../../dist/* node_modules/filesize/dist/ && npm run build",
      "types": "npx -p typescript tsc src/*.js --declaration --allowJs --emitDeclarationOnly --outDir types",
      "prepare": "husky"
    },
    "devDependencies": {
      "@rollup/plugin-terser": "^0.4.4",
      "auto-changelog": "^2.4.0",
      "eslint": "^9.6.0",
      "husky": "^9.0.11",
      "mocha": "^10.6.0",
      "nyc": "^17.0.0",
      "rollup": "^4.18.1",
      "typescript": "^5.5.3"
    },
    "keywords": [
      "file",
      "filesize",
      "size",
      "readable",
      "file system",
      "bytes",
      "diff"
    ],
    "_registry": "npm",
    "_loc": "/data/data/com.termux/files/home/.cache/yarn/v6/npm-filesize-10.1.6-31194da825ac58689c0bce3948f33ce83aabd361-integrity/node_modules/filesize/package.json",
    "readmeFilename": "README.md",
    "readme": "# filesize.js\n\n[![downloads](https://img.shields.io/npm/dt/filesize.svg)](https://www.npmjs.com/package/filesize) [![CDNJS version](https://img.shields.io/cdnjs/v/filesize.svg)](https://cdnjs.com/libraries/filesize)\n\nfilesize.js provides a simple way to get a human-readable file size string from a number (float or integer) or string.\n\n```javascript\nimport {filesize} from \"filesize\";\nfilesize(265318, {standard: \"jedec\"}); // \"259.1 KB\"\n```\n\n## Testing\n\nfilesize has 100% code coverage with its tests.\n\n```console\n--------------|---------|----------|---------|---------|-----------------------\nFile          | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s\n--------------|---------|----------|---------|---------|-----------------------\nAll files     |     100 |    95.52 |     100 |     100 |                      \n filesize.cjs |     100 |    95.52 |     100 |     100 | 77-78,173,196,199,210\n--------------|---------|----------|---------|---------|-----------------------\n```\n\n## Optional settings\n\n`filesize()` accepts an optional descriptor Object as a second argument, so you can customize the output.\n\n### base\n_*(number)*_ Number base, default is `10`\n\n### bits\n_*(boolean)*_ Enables `bit` sizes, default is `false`\n\n### exponent\n_*(number)*_ Specifies the symbol via exponent, e.g. `2` is `MB` for base 2, default is `-1`\n\n### fullform\n_*(boolean)*_ Enables full form of unit of measure, default is `false`\n\n### fullforms\n_*(array)*_ Array of full form overrides, default is `[]`\n\n### locale (overrides 'separator')\n_*(string || boolean)*_ BCP 47 language tag to specify a locale, or `true` to use default locale, default is `\"\"`\n\n### localeOptions (overrides 'separator', requires string for 'locale' option)\n_*(object)*_ Dictionary of options defined by ECMA-402 ([Number.prototype.toLocaleString](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toLocaleString)). Requires locale option to be explicitly passed as a string, otherwise is ignored.\n\n### output\n_*(string)*_ Output of function (`array`, `exponent`, `object`, or `string`), default is `string`\n\n### pad\n_*(boolean)*_ Decimal place end padding, default is `false`\n\n### precision\n_*(number)*_ Sets precision of numerical output, default is `0`\n\n### round\n_*(number)*_ Decimal place, default is `2`\n\n### roundingMethod\n_*(string)*_ Rounding method, can be `round`, `floor`, or `ceil`, default is `round`\n\n### separator\n_*(string)*_ Decimal separator character, default is an empty string.\n\n### spacer\n_*(string)*_ Character between the `result` and `symbol`, default is `\" \"`\n\n### standard\n_*(string)*_ Standard unit of measure, can be `iec`, `jedec`, or `si`. Default is `si` (base 10). The `si` option is an alias of `jedec`, such that it is not valid for other configuration options.\n\n### symbols\n_*(object)*_ Dictionary of IEC/JEDEC symbols to replace for localization, defaults to english if no match is found; SI is handled automatically with JEDEC values.\n\n## Examples\n\n```javascript\nfilesize(500);                        // \"500 B\"\nfilesize(500, {bits: true});          // \"4 kbit\"\nfilesize(265318, {base: 2});          // \"259.1 KiB\"\nfilesize(265318);                     // \"265.32 kB\"\nfilesize(265318, {round: 0});         // \"265 kB\"\nfilesize(265318, {output: \"array\"});  // [265.32, \"kB\"]\nfilesize(265318, {output: \"object\"}); // {value: 265.32, symbol: \"kB\", exponent: 1, unit: \"kB\"}\nfilesize(1, {symbols: {B: \"Б\"}});     // \"1 Б\"\nfilesize(1024);                       // \"1.02 kB\"\nfilesize(1024, {exponent: 0});        // \"1024 B\"\nfilesize(1024, {output: \"exponent\"}); // 1\nfilesize(265318, {standard: \"jedec\"});  // \"259.1 KB\"\nfilesize(265318, {base: 2, fullform: true}); // \"259.1 kibibytes\"\nfilesize(12, {fullform: true, fullforms: [\"байтов\"]});  // \"12 байтов\"\nfilesize(265318, {separator: \",\"});   // \"265,32 kB\"\nfilesize(265318, {locale: \"de\"});   // \"265,32 kB\"\n```\n\n\n## Partial Application\n`partial()` takes the second parameter of `filesize()` and returns a new function with the configuration applied \nupon execution. This can be used to reduce `Object` creation if you call `filesize()` without caching the `descriptor` \nin lexical scope.\n\n```javascript\nimport {partial} from \"filesize\";\nconst size = partial({standard: \"jedec\"});\n\nsize(265318); // \"259.1 KB\"\n```\n\n## License\nCopyright (c) 2024 Jason Mulligan\nLicensed under the BSD-3 license.\n",
    "licenseText": "Copyright (c) 2024, Jason Mulligan\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n* Neither the name of filesize nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/filesize/-/filesize-10.1.6.tgz#31194da825ac58689c0bce3948f33ce83aabd361",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/filesize/-/filesize-10.1.6.tgz",
    "hash": "31194da825ac58689c0bce3948f33ce83aabd361",
    "integrity": "sha512-sJslQKU2uM33qH5nqewAwVB2QgR6w1aMNsYUp3aN5rMRyXEwJGmZvaWzeJFNTOXWlHQyBFCWrdj3fV/fsTOX8w==",
    "registry": "npm",
    "packageName": "filesize",
    "cacheIntegrity": "sha512-sJslQKU2uM33qH5nqewAwVB2QgR6w1aMNsYUp3aN5rMRyXEwJGmZvaWzeJFNTOXWlHQyBFCWrdj3fV/fsTOX8w== sha1-MRlNqCWsWGicC845SPM86Dqr02E="
  },
  "registry": "npm",
  "hash": "31194da825ac58689c0bce3948f33ce83aabd361"
}